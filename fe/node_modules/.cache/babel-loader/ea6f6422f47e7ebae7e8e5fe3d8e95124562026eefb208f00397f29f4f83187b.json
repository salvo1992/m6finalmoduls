{"ast":null,"code":"import axios from \"axios\";\nclass AxiosClient {\n  constructor() {\n    this.axiosInstance = axios.create({\n      baseURL: AxiosClient.baseUrl,\n      maxContentLength: Infinity,\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        Authorization: ''\n      }\n    });\n  }\n  setHeaders(headers) {\n    this.axiosInstance.defaults.headers.common = {\n      ...this.axiosInstance.defaults.headers.common,\n      ...headers\n    };\n  }\n  async get(url, config) {\n    const response = await this.axiosInstance.get(url, config);\n    return response.data;\n  }\n  async post(url, payload, config) {\n    const response = await this.axiosInstance.post(url, payload, config);\n    return response.data;\n  }\n  async update(url, payload, config) {\n    return await this.axiosInstance.patch(url, payload, config);\n  }\n  async delete(url, config) {\n    return await this.axiosInstance.delete(url, config);\n  }\n}\nAxiosClient.baseUrl = `${process.env.REACT_APP_SERVER_BASE_URL}`;\nexport default AxiosClient;","map":{"version":3,"names":["axios","AxiosClient","constructor","axiosInstance","create","baseURL","baseUrl","maxContentLength","Infinity","headers","Accept","Authorization","setHeaders","defaults","common","get","url","config","response","data","post","payload","update","patch","delete","process","env","REACT_APP_SERVER_BASE_URL"],"sources":["C:/Users/user/Documents/GitHub/m6finalmoduls/fe/src/client/client.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nclass AxiosClient {\r\n    static baseUrl = `${process.env.REACT_APP_SERVER_BASE_URL}`\r\n\r\n    constructor() {\r\n        this.axiosInstance = axios.create({\r\n            baseURL: AxiosClient.baseUrl,\r\n            maxContentLength: Infinity,\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n                Authorization: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    setHeaders(headers) {\r\n        this.axiosInstance.defaults.headers.common = {\r\n            ...this.axiosInstance.defaults.headers.common,\r\n            ...headers\r\n        }\r\n    }\r\n\r\n    async get(url, config) {\r\n        const response = await this.axiosInstance.get(url, config)\r\n        return response.data\r\n    }\r\n\r\n    async post(url, payload, config) {\r\n        const response = await this.axiosInstance.post(url, payload, config)\r\n        return response.data\r\n    }\r\n\r\n    async update(url, payload, config) {\r\n        return await this.axiosInstance.patch(url, payload, config)\r\n    }\r\n\r\n    async delete(url, config) {\r\n        return await this.axiosInstance.delete(url, config);\r\n    }\r\n}\r\n\r\nexport default AxiosClient;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,CAAC;EAGdC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,aAAa,GAAGH,KAAK,CAACI,MAAM,CAAC;MAC9BC,OAAO,EAAEJ,WAAW,CAACK,OAAO;MAC5BC,gBAAgB,EAAEC,QAAQ;MAC1BC,OAAO,EAAE;QACLC,MAAM,EAAE,kBAAkB;QAC1B,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE;MACnB;IACJ,CAAC,CAAC;EACN;EAEAC,UAAUA,CAACH,OAAO,EAAE;IAChB,IAAI,CAACN,aAAa,CAACU,QAAQ,CAACJ,OAAO,CAACK,MAAM,GAAG;MACzC,GAAG,IAAI,CAACX,aAAa,CAACU,QAAQ,CAACJ,OAAO,CAACK,MAAM;MAC7C,GAAGL;IACP,CAAC;EACL;EAEA,MAAMM,GAAGA,CAACC,GAAG,EAAEC,MAAM,EAAE;IACnB,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACf,aAAa,CAACY,GAAG,CAACC,GAAG,EAAEC,MAAM,CAAC;IAC1D,OAAOC,QAAQ,CAACC,IAAI;EACxB;EAEA,MAAMC,IAAIA,CAACJ,GAAG,EAAEK,OAAO,EAAEJ,MAAM,EAAE;IAC7B,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACf,aAAa,CAACiB,IAAI,CAACJ,GAAG,EAAEK,OAAO,EAAEJ,MAAM,CAAC;IACpE,OAAOC,QAAQ,CAACC,IAAI;EACxB;EAEA,MAAMG,MAAMA,CAACN,GAAG,EAAEK,OAAO,EAAEJ,MAAM,EAAE;IAC/B,OAAO,MAAM,IAAI,CAACd,aAAa,CAACoB,KAAK,CAACP,GAAG,EAAEK,OAAO,EAAEJ,MAAM,CAAC;EAC/D;EAEA,MAAMO,MAAMA,CAACR,GAAG,EAAEC,MAAM,EAAE;IACtB,OAAO,MAAM,IAAI,CAACd,aAAa,CAACqB,MAAM,CAACR,GAAG,EAAEC,MAAM,CAAC;EACvD;AACJ;AAvCMhB,WAAW,CACNK,OAAO,GAAI,GAAEmB,OAAO,CAACC,GAAG,CAACC,yBAA0B,EAAC;AAwC/D,eAAe1B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}